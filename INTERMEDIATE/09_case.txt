The SQL CASE statement
The CASE statement is SQL's way of handling if/then logic. 
The CASE statement is followed by at least one pair of WHEN and THEN statements. 
Because of this pairing, you might be tempted to call this SQL CASE WHEN, but CASE is the accepted term.

In plain English, here's what's happening:

The CASE statement checks each row to see if the conditional statementâ€”year = 'SR' is true.
For any given row, if that conditional statement is true, the word "yes" gets printed in the column that we have named is_a_senior.
In any row for which the conditional statement is false, nothing happens in that row, leaving a null value in the is_a_senior column.
At the same time all this is happening, SQL is retrieving and displaying all the values in the player_name and year columns.

Adding multiple conditions to a CASE statement
You can also define a number of outcomes in a CASE statement by including as many WHEN/THEN statements as you'd like

A quick review of CASE basics:
The CASE statement always goes in the SELECT clause
CASE must include the following components: WHEN, THEN, and END. ELSE is an optional component.
You can make any conditional statement using any conditional operator (like WHERE ) between WHEN and THEN. This includes stringing together multiple conditional statements using AND and OR.
You can include multiple WHEN statements, as well as an ELSE statement to deal with any unaddressed conditions.